version: '3.8'

services:
  mymongodb:
    image: mongo:latest
    container_name: mymongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 30s
      timeout: 10s
      retries: 5


  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mymongodb:27017/users
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - DAPR_HTTP_PORT=3500
      - DAPR_HTTP_ENDPOINT=http://localhost:3500
      - DAPR_PROTOCOL=http
    depends_on:
      rabbitmq:
        condition: service_healthy
      mymongodb:
        condition: service_started
    networks:
      - microservices-network

  dapr-sidecar-user-service:
    image: daprio/daprd:1.13.5
    container_name: dapr-sidecar-user-service
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "-app-id", "user-service",
      "-app-port", "8081",
      "-app-protocol", "http",
      "-dapr-http-port", "3500",
      "-components-path", "./dapr/components",
      "-config", "./dapr/config.yaml"
    ]
    volumes:
      - "./dapr:/dapr"
    depends_on:
      - user-service
    network_mode: "service:user-service"

  news-service:
    build:
      context: ./news-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mymongodb:27017/news
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - DAPR_HTTP_PORT=3501
      - DAPR_HTTP_ENDPOINT=http://localhost:3501
      - DAPR_PROTOCOL=http
      - NEWSDATA_API_KEY=pub_4833216be0d3292a2c069cfc95c63b71c830a
      - EDENAI_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiM2U0Mjk0OWUtNjY5OC00ZjgxLWJkMWYtZmI5ODBkNjNjNGE1IiwidHlwZSI6ImZyb250X2FwaV90b2tlbiJ9.HzZsduh88XIKEueoM6YLc7zMT6aOD3rZVYhsanzr7jI
    depends_on:
      rabbitmq:
        condition: service_healthy
      mymongodb:
        condition: service_started
    networks:
      - microservices-network

  dapr-sidecar-news-service:
    image: daprio/daprd:1.13.5
    container_name: dapr-sidecar-news-service
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "-app-id", "news-service",
      "-app-port", "8082",
      "-app-protocol", "http",
      "-dapr-http-port", "3501",
      "-components-path", "./dapr/components",
      "-config", "./dapr/config.yaml"
    ]
    volumes:
      - "./dapr:/dapr"
    depends_on:
      - news-service
    network_mode: "service:news-service"

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - DAPR_HTTP_PORT=3502
      - DAPR_HTTP_ENDPOINT=http://localhost:3502
      - DAPR_PROTOCOL=http
      - SPRING_MAIL_HOST=sandbox.smtp.mailtrap.io
      - SPRING_MAIL_PORT=2525
      - SPRING_MAIL_USERNAME=56187ab4c1507c
      - SPRING_MAIL_PASSWORD=1b825ca9d763b0
      - SPRING_MAIL_FROM=no-reply@example.com
    depends_on:
      rabbitmq:
        condition: service_healthy
      mymongodb:
        condition: service_started
    networks:
      - microservices-network

  dapr-sidecar-notification-service:
    image: daprio/daprd:1.13.5
    container_name: dapr-sidecar-notification-service
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
        window: 120s
    command: [
      "./daprd",
      "-app-id", "notification-service",
      "-app-port", "8083",
      "-app-protocol", "http",
      "-dapr-http-port", "3502",
      "-components-path", "./dapr/components",
      "-config", "./dapr/config.yaml"
    ]
    volumes:
      - "./dapr:/dapr"
    depends_on:
      - notification-service
    network_mode: "service:notification-service"

volumes:
  mongo-data:

networks:
  microservices-network:
    external: true
