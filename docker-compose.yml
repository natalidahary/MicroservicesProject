version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mongo:27017/users?authSource=admin
    depends_on:
      - mongo

  news-service:
    build:
      context: ./news-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - mongo

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_MAIL_HOST=smtp.example.com
      - SPRING_MAIL_PORT=587
      - SPRING_MAIL_USERNAME=your_email@example.com
      - SPRING_MAIL_PASSWORD=your_email_password
    depends_on:
      - mongo

#  api-gateway:
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    depends_on:
#      - user-service
#      - news-service
#      - notification-service

volumes:
  mongo-data:

#services:
#  # user service - MongoDB
#  mongodb:
#    image: mongo:latest
#    container_name: mongodb-user
#    ports:
#      - "27017:27017"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: password
#      MONGO_INITDB_DATABASE: user_service
#    volumes:
#      - mongodb_data:/data/db
#    networks:
#      - microservicesproject_mynetwork
#
#
#volumes:
#  mongodb_data:
#
#networks:
#  microservicesproject_mynetwork:
#    external: true

#
#services:
#  ########################
#  # MongoDB Service
#  ########################
#  mongodb:
#    image: mongo:latest
#    container_name: mongodb-user
#    ports:
#      - "27017:27017"
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=password
#      - MONGO_INITDB_DATABASE=user_service
#    volumes:
#      - mongodb_data:/data/db
#    networks:
#      - microservicesproject_mynetwork
#
#  ########################
#  # Spring Boot App Service
#  ########################
#  user-service:
#    build:
#      context: ./user-service
#      dockerfile: Dockerfile
#    container_name: user-service
#    ports:
#      - 8081:8080
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mongodb-user:27017/user_service?authSource=admin
#    depends_on:
#      - mongodb
#    networks:
#      - microservicesproject_mynetwork
#
#  ########################
#  # Dapr Sidecar for Spring Boot App
#  ########################
#  user-service-dapr:
#    image: "daprio/daprd:edge"
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 10
#        window: 120s
#    command: ["./daprd",
#              "-app-id", "user-service",
#              "-app-port", "8080",
#              "-app-protocol", "http",
#              "-dapr-http-port", "3500",
#              "-resources-path", "./dapr/components",
#              "-config", "./dapr/config.yaml"
#    ]
#    volumes:
#      - "./dapr/:/dapr"
#    depends_on:
#      - user-service
#    networks:
#      - microservicesproject_mynetwork
#    ports:
#      - 3500:3500
#
#volumes:
#  mongodb_data:
#
#networks:
#  microservicesproject_mynetwork:
#    external: true




#services:
#  ########################
#  # MongoDB Service
#  ########################
#  mymongodb:
#    image: mongo:latest
#    container_name: mymongodb
#    ports:
#      - 27017:27017
#    environment:
#      - MONGO_INITDB_ROOT_USERNAME=root
#      - MONGO_INITDB_ROOT_PASSWORD=password
#      - MONGO_INITDB_DATABASE=user_service
#    volumes:
#      - ./mongo-data:/data/db
#    networks:
#      - microservicesproject_mynetwork
#
#  ########################
#  # Spring Boot App Service
#  ########################
#  springboot-mongodb:
#    build:
#      context: ./user-service
#      dockerfile: Dockerfile
#    container_name: springboot-mongodb
#    ports:
#      - 8081:8080
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mymongodb:27017/user_service?authSource=admin
#    depends_on:
#      - mymongodb
#    networks:
#      - microservicesproject_mynetwork
#
#  ########################
#  # Dapr Sidecar for Spring Boot App
#  ########################
#  springboot-mongodb-dapr:
#    image: "daprio/daprd:edge"
#    deploy:
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 10
#        window: 120s
#    command: ["./daprd",
#              "-app-port", "8080",
#              "-app-id", "springboot-mongodb",
#              "-app-protocol", "http",
#              "-dapr-http-port", "3500",
#              "-resources-path", "./dapr/components",
#              "-config", "./dapr/config.yaml"
#    ]
#    volumes:
#      - "./dapr/:/dapr"
#    depends_on:
#      - springboot-mongodb
#    networks:
#      - microservicesproject_mynetwork
#    ports:
#      - 3500:3500
#
#networks:
#  microservicesproject_mynetwork:
#    external: true
